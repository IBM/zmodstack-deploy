---
# Create namespace for ibm wazi devspaces
# tasks file for devspaces
- include_vars: wazi-devspaces2.yml

- name: "Create project with Native YAML API - IBM Wazi for DevSpaces"
  kubernetes.core.k8s:
    state: present
    src: "files/project.yaml"

- name: "Create opertaor group with Native YAML API - IBM Wazi for DevSpaces"
  kubernetes.core.k8s:
    state: present
    namespace: "wazi-devspaces"
    src: "files/operator-group.yaml"

- name: "Create ansible-workspace directory - IBM Wazi for DevSpaces"
  ansible.builtin.file:
    path: "{{ playbook_dir }}/ansible-workspace/wazi-devspace/generated_yamls"
    state: directory

- name: "Create subscription.yaml - IBM Wazi for DevSpaces"
  ansible.builtin.template:
    src: files/wazi-devspaces-subscription.yaml.j2
    dest: "{{ playbook_dir }}/ansible-workspace/wazi-devspace/generated_yamls/wazi-devspaces-subscription.yaml"

- name: "Create Wazi DevSpaces Subscription with Native YAML API - IBM Wazi for DevSpaces"
  kubernetes.core.k8s:
    state: present
    namespace: "wazi-devspaces"
    src: "{{ playbook_dir }}/ansible-workspace/wazi-devspace/generated_yamls/wazi-devspaces-subscription.yaml"

#install IBM Wazi for DevSpaces in openshift-operators namespace to install by default on all namespaces
- name: "Retrieve  IBM Wazi for DevSpaces subscription info"
  kubernetes.core.k8s_info:
    kind: Subscription
    namespace: "wazi-devspaces"
    name: "{{ devspaces_subscription.name }}"
    api_version: "{{ devspaces_subscription.apiVersion }}"
  register: devspaces_subscription_info
  until:
    - "devspaces_subscription_info.resources is defined and devspaces_subscription_info.resources | length > 0"
    - "'state' in devspaces_subscription_info.resources[0].status and devspaces_subscription_info.resources[0].status.state == 'AtLatestKnown'"
  retries: 30
  delay: 10

- name: "Verify IBM Wazi for devspaces subscription: '{{ devspaces_subscription.name }}'"
  ansible.builtin.assert:
    that:
      - devspaces_subscription_info.resources[0].metadata.creationTimestamp != ""
      - devspaces_subscription_info.resources[0].status.installplan.kind == "InstallPlan"
      - devspaces_subscription_info.resources[0].status.installplan.name != ""
      - devspaces_subscription_info.resources[0].status.state == "AtLatestKnown"
      - devspaces_subscription_info.resources[0].status.conditions[0].reason == "AllCatalogSourcesHealthy"

- name: "Create license.yaml - IBM Wazi for DevSpaces"
  ansible.builtin.template:
    src: files/wazi-license.yaml.j2
    dest: "{{ playbook_dir }}/ansible-workspace/wazi-devspace/generated_yamls/wazi-license.yaml"

- name: "Accept wazi DevSpaces License with Native YAML API - - IBM Wazi for DevSpaces"
  kubernetes.core.k8s:
    state: present
    namespace: "wazi-devspaces"
    src: "{{ playbook_dir }}/ansible-workspace/wazi-devspace/generated_yamls/wazi-license.yaml"

# Wait for 50 secconds until wazi license is up (status block unavailable for verification)
- name: Wait for 50sec for wazi License setup
  pause:
    seconds: 50

- name: "Create IBM Wazi for DevSpaces che cluster with Native YAML API - IBM Wazi for DevSpaces"
  kubernetes.core.k8s:
    state: present
    namespace: "wazi-devspaces"
    src: "files/wazi-devspaces2.yaml"

# tasks to verify the installation
- name: "Retrieve IBM Wazi for DevSpaces custom resource instance Info - IBM Wazi for DevSpaces"
  kubernetes.core.k8s_info:
    namespace: "wazi-devspaces"
    kind: "{{ devspaces.kind }}"
    name: "{{ devspaces.name }}"
    api_version: "{{ devspaces.apiVersion }}"
  register: devspaces_info
  until:
    - "devspaces_info.resources is defined and devspaces_info.resources | length > 0"
    - "'cheClusterRunning' in devspaces_info.resources[0].status and devspaces_info.resources[0].status.cheClusterRunning == 'Available'"
    - "'openShiftoAuthProvisioned' in devspaces_info.resources[0].status and devspaces_info.resources[0].status.openShiftoAuthProvisioned == true"
  retries: 30
  delay: 10

- name: "Verify IBM Wazi for Devspaces: '{{ devspaces.name }}'"
  ansible.builtin.assert:
    that:
      - devspaces_info.resources[0].status.cheClusterRunning == "Available"
      - devspaces_info.resources[0].status.openShiftoAuthProvisioned == true
      - devspaces_info.resources[0].status.dbProvisioned == true
      - "devspaces_info.resources[0].status.cheURL | length > 0"
      