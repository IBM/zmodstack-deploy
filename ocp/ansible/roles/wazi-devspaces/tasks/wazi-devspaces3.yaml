---
# Create namespace for ibm wazi devspaces
# tasks file for devspaces
- include_vars: wazi-devspaces3.yml

- name: Create ansible-workspace directory 
  ansible.builtin.file:
    path: "{{ ansible_workspace }}/generated_yamls"
    state: directory

- name: Create subscription.yaml
  ansible.builtin.template:
    src: files/wazi-devspaces-subscription.yaml.j2
    dest: "{{ ansible_workspace }}/generated_yamls/wazi-devspaces-subscription.yaml"

- name: "Create RedHat DevSpaces Subscription with Native YAML API"
  kubernetes.core.k8s:
    state: present
    namespace: "openshift-operators"
    src: "{{ ansible_workspace }}/generated_yamls/wazi-devspaces-subscription.yaml"

#install RedHat DevSpaces in openshift-operators namespace to install by default on all namespaces
- name: "Retrieve RedHat DevSpaces subscription info"
  kubernetes.core.k8s_info:
    kind: Subscription
    namespace: "openshift-operators"
    name: "{{ devspaces_subscription.name }}"
    api_version: "{{ devspaces_subscription.apiVersion }}"
  register: devspaces_subscription_info
  until:
    - "devspaces_subscription_info.resources is defined and devspaces_subscription_info.resources | length > 0"
    - "'state' in devspaces_subscription_info.resources[0].status and devspaces_subscription_info.resources[0].status.state == 'AtLatestKnown'"
  retries: 30
  delay: 30

- name: "Verify devspaces subscription: '{{ devspaces_subscription.name }}'"
  ansible.builtin.assert:
    that:
      - devspaces_subscription_info.resources[0].metadata.creationTimestamp != ""
      - devspaces_subscription_info.resources[0].status.installplan.kind == "InstallPlan"
      - devspaces_subscription_info.resources[0].status.installplan.name != ""
      - devspaces_subscription_info.resources[0].status.state == "AtLatestKnown"
      - devspaces_subscription_info.resources[0].status.conditions[0].reason == "AllCatalogSourcesHealthy"

- name: Create license.yaml
  ansible.builtin.template:
    src: files/wazi-license.yaml.j2
    dest: "{{ ansible_workspace }}/generated_yamls/wazi-license.yaml"

- name: "Accept wazi DevSpaces License with Native YAML API"
  kubernetes.core.k8s:
    state: present
    namespace: "openshift-operators"
    src: "{{ ansible_workspace }}/generated_yamls/wazi-license.yaml"

# no status block - wait for license 
- name: 50 second pause 
  pause:
    seconds: 50

- name: "Create RedHat DevSpaces che cluster with Native YAML API"
  kubernetes.core.k8s:
    state: present
    namespace: "openshift-operators"
    src: "files/wazi-devspaces3.yaml"

# tasks to verify the installation
- name: "Retrieve RedHat DevSpaces custom resource instance Info"
  kubernetes.core.k8s_info:
    namespace: "openshift-operators"
    kind: "{{ devspaces.kind }}"
    name: "{{ devspaces.name }}"
    api_version: "{{ devspaces.apiVersion }}"
  register: devspaces_info
  until:
    - "devspaces_info.resources is defined and devspaces_info.resources | length > 0"
    - "devspaces_info.resources[0].status is defined and devspaces_info.resources[0].status | length > 0"
    - "'chePhase' in devspaces_info.resources[0].status and devspaces_info.resources[0].status.chePhase == 'Active'"
    - "'gatewayPhase' in devspaces_info.resources[0].status and devspaces_info.resources[0].status.gatewayPhase == 'Established'"
  retries: 30
  delay: 50

- ansible.builtin.debug:
        var: devspaces_info

- name: "Verify Devspaces: '{{ devspaces.name }}'"
  ansible.builtin.assert:
    that:
      - devspaces_info.resources[0].status.chePhase == "Active"
      - devspaces_info.resources[0].status.gatewayPhase == "Established"
      - devspaces_info.resources[0].status.cheURL | length > 0