---
- include_vars: ocp-install.yml

- name: Create AWS directory
  ansible.builtin.file:
    path: "~/.aws"
    state: directory

- name: Create AWS Credentials File
  copy:
    content: |
      [default]
      aws_access_key_id = {{ access_key_id }}
      aws_secret_access_key = {{ secret_access_key }}
    dest: ~/.aws/credentials

- name: Create AWS Config File
  copy:
    content: |
      [default]
      region = {{ region }}
    dest: ~/.aws/config

- name: Create Installer workspace directory - OpenShift Insatllation
  ansible.builtin.file:
    path: {{ playbook_dir }}/installer-workspace
    state: directory

- name: Download OpenShift install binary
  ansible.builtin.get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-{{ openshift_version }}/openshift-install-linux.tar.gz"
    dest: {{ playbook_dir }}/installer-workspace
    mode: '0644'

- name: Download OpenShift client binary
  ansible.builtin.get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-{{ openshift_version }}/openshift-client-linux.tar.gz"
    dest: {{ playbook_dir }}/installer-workspace
    mode: '0644'

- name: Extract OpenShift install binary
  ansible.builtin.unarchive:
    src: {{ playbook_dir }}/installer-workspace/openshift-install-linux.tar.gz
    dest: {{ playbook_dir }}/installer-workspace

- name: Extract OpenShift client binary
  ansible.builtin.unarchive:
    src: {{ playbook_dir }}/installer-workspace/openshift-client-linux.tar.gz
    dest: /usr/bin

- name: Jinja Conversion for Install Config yaml
  ansible.builtin.template:
    src: files/install-config.yaml
    dest: {{ playbook_dir }}/installer-workspace/install-config.yaml
    mode: '0644'

- name: OCP install
  ansible.builtin.command: {{ playbook_dir }}/installer-workspace/openshift-install create cluster --dir={{ playbook_dir }}/installer-workspace/ --log-level=debug
  register: command_output
  changed_when: true

- name: Jinja Conversion for NLB yaml
  ansible.builtin.template:
    src: files/aws_nlb.yaml
    dest: {{ playbook_dir }}/installer-workspace/aws_nlb.yaml
    mode: '0644'

- name: Install IBM Operator Catalogue
  kubernetes.core.k8s:
    state: present
    src: {{ playbook_dir }}/installer-workspace/aws_nlb.yaml

- name: Create kube dir to store and configure kubeconfig
  ansible.builtin.file:
    path: /root/.kube
    state: directory

- name: Copy kubeconfig file to kube directory of admin user
  ansible.builtin.copy:
    src: {{ playbook_dir }}/installer-workspace/auth/kubeconfig
    dest: /root/.kube/config

- name: Switch to Machine API project
  ansible.builtin.command: oc project openshift-machine-api
  register: command_output
  changed_when: true

- name: Create OpenShift User
  ansible.builtin.command: "htpasswd -c -B -b /tmp/.htpasswd {{ openshift_username }} {{ openshift_password }}"
  register: command_output
  changed_when: true

- name: Create Secret
  ansible.builtin.command: oc create secret generic htpass-secret --from-file=htpasswd=/tmp/.htpasswd -n openshift-config
  register: command_output
  changed_when: true

- name: Create OAuth Authentication
  kubernetes.core.k8s:
    state: present
    src: files/htpasswd.yaml

- name: Add Cluster Role to User
  ansible.builtin.command: "oc adm policy add-cluster-role-to-user cluster-admin {{ openshift_username }}"
  register: command_output
  changed_when: true

- name: Install IBM Operator Catalogue
  kubernetes.core.k8s:
    state: present
    src: files/ibm-operator-catalog.yaml

- name: Create the default gp3 storage class 
  kubernetes.core.k8s:
    state: present
    src: files/gp3_immediate_storageclass.yaml
