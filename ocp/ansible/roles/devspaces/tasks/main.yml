---
- include_vars: devspaces.yml
# Create namespace for cloudbroker
# tasks file for devspaces
- name: "Create RedHat DevSpaces Subscription with Native YAML API"
  kubernetes.core.k8s:
    state: present
    namespace: "openshift-operators"
    src: "files/devspaces-subscription.yaml"
    wait: true
    wait_sleep: 50

#install RedHat DevSpaces in openshift-operators namespace to install by default on all namespaces
- name: "Retrieve RedHat DevSpaces subscription info"
  kubernetes.core.k8s_info:
    kind: Subscription
    namespace: "openshift-operators"
    name: "{{ devspaces_subscription.name }}"
    api_version: "{{ devspaces_subscription.apiVersion }}"
  register: devspaces_subscription_info
  until:
    - "devspaces_subscription_info.resources is defined and devspaces_subscription_info.resources | length > 0"
    - "'state' in devspaces_subscription_info.resources[0].status and devspaces_subscription_info.resources[0].status.state == 'AtLatestKnown'"
  retries: 30
  delay: 10

- name: "Verify devspaces subscription: '{{ devspaces_subscription.name }}'"
  ansible.builtin.assert:
    that:
      - devspaces_subscription_info.resources[0].metadata.creationTimestamp != ""
      - devspaces_subscription_info.resources[0].status.installplan.kind == "InstallPlan"
      - devspaces_subscription_info.resources[0].status.installplan.name != ""
      - devspaces_subscription_info.resources[0].status.state == "AtLatestKnown"
      - devspaces_subscription_info.resources[0].status.conditions[0].reason == "AllCatalogSourcesHealthy"

- name: "Create RedHat DevSpaces che cluster with Native YAML API"
  kubernetes.core.k8s:
    state: present
    namespace: "openshift-operators"
    src: "files/devspaces.yaml"
    wait: true
    wait_sleep: 200

# tasks to verify the installation
- name: "Retrieve RedHat DevSpaces custom resource instance Info"
  kubernetes.core.k8s_info:
    namespace: "openshift-operators"
    kind: "{{ devspaces.kind }}"
    name: "{{ devspaces.name }}"
    api_version: "{{ devspaces.apiVersion }}"
  register: devspaces_info

- ansible.builtin.debug:
        var: devspaces_info

- name: "Verify Devspaces: '{{ devspaces.name }}'"
  ansible.builtin.assert:
    that:
      - devspaces_info.resources[0].status.chePhase == "Active"
      - devspaces_info.resources[0].status.gatewayPhase == "Established"