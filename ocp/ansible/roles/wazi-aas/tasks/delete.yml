---
- name: Release Floating IP
  ibm.cloudcollection.ibm_is_floating_ip:
    state: absent
    id: "{{ fip.id }}"
    resource_group: "{{ vpc.resource_group }}"
    target: "{{ vsi.primary_network_interface[0]['id'] }}"
  when: (fip is defined) and (fip != None)

- name: Remove Floating IP fact
  when: fip is defined
  ansible.builtin.set_fact:
    cacheable: true
    fip: null

- name: Remove VSI
  ibm.cloudcollection.ibm_is_instance:
    state: absent
    id: "{{ vsi.id }}"
    vpc: "{{ vpc.id }}"
    profile: "{{ instance.profile }}"
    image: "{{ (image_dict | dict2items | selectattr('key', 'match', instance.image) | list | first).value }}"
    keys:
      - "{{ ssh_key.id }}"
    primary_network_interface:
      - subnet: "{{ subnet.id }}"
    zone: "{{ zone }}"
    resource_group: "{{ vpc.resource_group }}"
  when: (vsi is defined) and (vsi != None)

- name: Remove VSI fact
  when: vsi is defined
  ansible.builtin.set_fact:
    cacheable: true
    vsi: null

# - name: Remove SSH Key
#   ibm.cloudcollection.ibm_is_ssh_key:
#     state: absent
#     id: "{{ ssh_key.id }}"
#     resource_group: "{{ vpc.resource_group }}"
#   when: ssh_key is defined

- name: Remove VPC Subnet
  ibm.cloudcollection.ibm_is_subnet:
    state: absent
    id: "{{ subnet.id }}"
    resource_group: "{{ vpc.resource_group }}"
  when: subnet is defined

- name: Remove VPC
  ibm.cloudcollection.ibm_is_vpc:
    state: absent
    id: "{{ vpc.id }}"
    resource_group: "{{ vpc.resource_group }}"
  when: vpc is defined
