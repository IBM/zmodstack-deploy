---
- name: Download OpenShift install binary
  ansible.builtin.get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-{{ openshift_version }}/openshift-install-linux.tar.gz"
    dest: "/home/{{ bootstrap_admin_username }}/openshift-install-linux.tar.gz"
    mode: '0644'
  become: true
  become_user: "{{ bootstrap_admin_username }}"
- name: Download OpenShift client binary
  ansible.builtin.get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-{{ openshift_version }}/openshift-client-linux.tar.gz"
    dest: "/home/{{ bootstrap_admin_username }}/openshift-client-linux.tar.gz"
    mode: '0644'
  become: true
  become_user: "{{ bootstrap_admin_username }}"
- name: Change ownership, group and permissions for installer_home directory
  ansible.builtin.file:
    path: "{{ installer_home }}"
    owner: "{{ bootstrap_admin_username }}"
    group: "{{ bootstrap_admin_username }}"
    mode: '0755'
- name: Extract OpenShift install binary
  ansible.builtin.unarchive:
    src: "/home/{{ bootstrap_admin_username }}/openshift-install-linux.tar.gz"
    dest: "{{ installer_home }}"
  become: true
  become_user: "{{ bootstrap_admin_username }}"
- name: Extract OpenShift client binary
  ansible.builtin.unarchive:
    src: "/home/{{ bootstrap_admin_username }}/openshift-client-linux.tar.gz"
    dest: /usr/bin
- name: Create a directory for Azure
  ansible.builtin.file:
    path: "/home/{{ bootstrap_admin_username }}/.azure"
    state: directory
    owner: "{{ bootstrap_admin_username }}"
    group: "{{ bootstrap_admin_username }}"
    mode: '0775'
- name: Jinja conversion for Service Principal json
  ansible.builtin.template:
    src: templates/service-principal.json.j2
    dest: "/home/{{ bootstrap_admin_username }}/.azure/osServicePrincipal.json"
    owner: "{{ bootstrap_admin_username }}"
    group: "{{ bootstrap_admin_username }}"
    mode: '0644'
- name: Jinja Conversion for Install Config yaml
  ansible.builtin.template:
    src: templates/install-config.yaml.j2
    dest: "{{ git_clone_dir }}/azure/scripts/ansible/playbooks/roles/ocpcluster/files/install-config.yaml"
    mode: '0644'
  when: not sno
- name: Jinja Conversion for Install Config yaml
  ansible.builtin.template:
    src: templates/install-config-sno.yaml.j2
    dest: "{{ git_clone_dir }}/azure/scripts/ansible/playbooks/roles/ocpcluster/files/install-config.yaml"
    mode: '0644'
  when: sno  
- name: Create a directory for OpenShift installation
  ansible.builtin.file:
    path: "{{ installer_home }}/openshiftfourx"
    state: directory
    owner: "{{ bootstrap_admin_username }}"
    group: "{{ bootstrap_admin_username }}"
    mode: '0775'
- name: Copy Install Config file to OpenShift installation directory
  ansible.builtin.copy:
    src: "{{ git_clone_dir }}/azure/scripts/ansible/playbooks/roles/ocpcluster/files/install-config.yaml"
    dest: "{{ installer_home }}/openshiftfourx/install-config.yaml"
    owner: "{{ bootstrap_admin_username }}"
    group: "{{ bootstrap_admin_username }}"
    mode: '0644'
- name: OCP install
  ansible.builtin.command: "{{ installer_home }}/openshift-install create cluster --dir={{ installer_home }}/openshiftfourx --log-level=debug"
  become: true
  become_user: "{{ bootstrap_admin_username }}"
  register: command_output
  changed_when: true
- name: Create a directory kube for bootstrap admin user
  ansible.builtin.file:
    path: "/home/{{ bootstrap_admin_username }}/.kube"
    state: directory
    owner: "{{ bootstrap_admin_username }}"
    group: "{{ bootstrap_admin_username }}"
    mode: '0775'
- name: Copy kubeconfig file to kube directory of bootstrap admin user
  ansible.builtin.copy:
    src: "{{ installer_home }}/openshiftfourx/auth/kubeconfig"
    dest: "/home/{{ bootstrap_admin_username }}/.kube/config"
    owner: "{{ bootstrap_admin_username }}"
    group: "{{ bootstrap_admin_username }}"
    mode: '0644'
- name: Switch to Machine API project
  ansible.builtin.command: oc project openshift-machine-api
  become: true
  become_user: "{{ bootstrap_admin_username }}"
  register: command_output
  changed_when: true
- name: Create OpenShift User
  ansible.builtin.command: "htpasswd -c -B -b /tmp/.htpasswd {{ openshift_username }} {{ openshift_password }}"
  become: true
  become_user: "{{ bootstrap_admin_username }}"
  register: command_output
  changed_when: true
- name: Create Secret
  ansible.builtin.command: oc create secret generic htpass-secret --from-file=htpasswd=/tmp/.htpasswd -n openshift-config
  become: true
  become_user: "{{ bootstrap_admin_username }}"
  register: command_output
  changed_when: true
- name: Setup Authentication
  kubernetes.core.k8s:
    state: present
    src: files/auth.yaml
  become: true
  become_user: "{{ bootstrap_admin_username }}"
- name: Add Cluster Role to User
  ansible.builtin.command: "oc adm policy add-cluster-role-to-user cluster-admin {{ openshift_username }}"
  become: true
  become_user: "{{ bootstrap_admin_username }}"
  register: command_output
  changed_when: true
- name: Create a directory kube for root user
  ansible.builtin.file:
    path: "~/.kube"
    state: directory
    mode: '0775'  
- name: Copy kubeconfig file to kube directory of root user
  ansible.builtin.copy:
    src: "{{ installer_home }}/openshiftfourx/auth/kubeconfig"
    dest: "~/.kube/config"
    mode: '0644'
