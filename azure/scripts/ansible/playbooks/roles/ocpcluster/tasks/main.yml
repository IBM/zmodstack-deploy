---
- name: Download OpenShift install binary
  ansible.builtin.get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-{{ OPENSHIFT_VERSION }}/openshift-install-linux.tar.gz"
    dest: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/openshift-install-linux.tar.gz"
    mode: '0644'
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
- name: Download OpenShift client binary
  ansible.builtin.get_url:
    url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-{{ OPENSHIFT_VERSION }}/openshift-client-linux.tar.gz"
    dest: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/openshift-client-linux.tar.gz"
    mode: '0644'
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
- name: Change ownership, group and permissions for INSTALLER_HOME directory
  ansible.builtin.file:
    path: "{{ INSTALLER_HOME }}"
    owner: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    group: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    mode: '0755'
- name: Extract OpenShift install binary
  ansible.builtin.unarchive:
    src: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/openshift-install-linux.tar.gz"
    dest: "{{ INSTALLER_HOME }}"
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
- name: Extract OpenShift client binary
  ansible.builtin.unarchive:
    src: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/openshift-client-linux.tar.gz"
    dest: /usr/bin
- name: Create a directory for Azure
  ansible.builtin.file:
    path: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.azure"
    state: directory
    owner: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    group: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    mode: '0775'
- name: Jinja conversion for Service Principal json
  ansible.builtin.template:
    src: files/service-principal.json
    dest: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.azure/osServicePrincipal.json"
    owner: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    group: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    mode: '0644'
- name: Jinja Conversion for Install Config yaml
  ansible.builtin.template:
    src: files/install-config.yaml
    dest: "{{ GIT_CLONE_DIR }}/azure/scripts/ansible/playbooks/roles/ocpcluster/files/install-config.yaml"
    mode: '0644'
- name: Create a directory for OpenShift installation
  ansible.builtin.file:
    path: "{{ INSTALLER_HOME }}/openshiftfourx"
    state: directory
    owner: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    group: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    mode: '0775'
- name: Copy Install Config file to OpenShift installation directory
  ansible.builtin.copy:
    src: "{{ GIT_CLONE_DIR }}/azure/scripts/ansible/playbooks/roles/ocpcluster/files/install-config.yaml"
    dest: "{{ INSTALLER_HOME }}/openshiftfourx/install-config.yaml"
    owner: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    group: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    mode: '0644'
- name: OCP install
  ansible.builtin.command: "{{ INSTALLER_HOME }}/openshift-install create cluster --dir={{ INSTALLER_HOME }}/openshiftfourx --log-level=debug"
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
  register: command_output
  changed_when: command_output.rc != 0
- name: Sleep for 2 minutes and continue with play
  ansible.builtin.wait_for:
    timeout: 120
- name: Create a directory kube for kubeconfig file
  ansible.builtin.file:
    path: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.kube"
    state: directory
    owner: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    group: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    mode: '0775'
- name: Copy kubeconfig file to kube directory
  ansible.builtin.copy:
    src: "{{ INSTALLER_HOME }}/openshiftfourx/auth/kubeconfig"
    dest: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.kube/config"
    owner: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    group: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
    mode: '0644'
- name: Switch to Machine API project
  ansible.builtin.command: oc project openshift-machine-api
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
  register: command_output
  changed_when: command_output.rc != 0
- name: Get Machine Set
  ansible.builtin.command: |
    oc get machineset -n openshift-machine-api -o jsonpath='{.items[0].metadata.labels.machine\.openshift\.io/cluster-api-cluster}'
    --kubeconfig /home/"{{ BOOTSTRAP_ADMIN_USERNAME }}"/.kube/config
  register: CLUSTER_ID_OUTPUT
  changed_when: ENABLE_AUTOSCALER | bool
- name: Set Cluster ID
  ansible.builtin.set_fact:
    CLUSTER_ID: "{{ CLUSTER_ID_OUTPUT.stdout | trim }}"
  when: ENABLE_AUTOSCALER | bool
- name: Execute Cluster Autoscalar
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.kube/config"
    src: files/cluster-autoscaler.yaml
    wait: true
    wait_sleep: 50
  when: ENABLE_AUTOSCALER | bool
- name: Jinja Conversion for Machine Autoscaler Yaml
  ansible.builtin.template:
    src: files/machine-autoscaler.yaml
    dest: "{{ GIT_CLONE_DIR }}/azure/scripts/ansible/playbooks/roles/ocpcluster/files/machine-autoscaler.yaml"
    mode: '0644'
  when: ENABLE_AUTOSCALER | bool
- name: Execute Machine Autoscalar
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.kube/config"
    src: files/machine-autoscaler.yaml
    wait: true
    wait_sleep: 50
  when: ENABLE_AUTOSCALER | bool
- name: Jinja Conversion for Machine Health Check Yaml
  ansible.builtin.template:
    src: files/machine-health-check.yaml
    dest: "{{ GIT_CLONE_DIR }}/azure/scripts/ansible/playbooks/roles/ocpcluster/files/machine-health-check.yaml"
    mode: '0644'
  when: ENABLE_AUTOSCALER | bool
- name: Execute Machine Health Check
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.kube/config"
    src: files/machine-health-check.yaml
    wait: true
    wait_sleep: 50
  when: ENABLE_AUTOSCALER | bool
- name: Create OpenShift User
  ansible.builtin.command: "htpasswd -c -B -b /tmp/.htpasswd {{ OPENSHIFT_USERNAME }} {{ OPENSHIFT_PASSWORD }}"
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
  register: command_output
  changed_when: command_output.rc != 0
- name: Sleep for 5 seconds and continue with play
  ansible.builtin.wait_for:
    timeout: 5
- name: Create Secret
  ansible.builtin.command: oc create secret generic htpass-secret --from-file=htpasswd=/tmp/.htpasswd -n openshift-config
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
  register: command_output
  changed_when: command_output.rc != 0
- name: Create OpenShift User
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.kube/config"
    src: files/auth.yaml
    wait: true
    wait_sleep: 50
- name: Add Cluster Role to User
  ansible.builtin.command: "oc adm policy add-cluster-role-to-user cluster-admin {{ OPENSHIFT_USERNAME }}"
  become: true
  become_user: "{{ BOOTSTRAP_ADMIN_USERNAME }}"
  register: command_output
  changed_when: command_output.rc != 0
- name: Install IBM Operator Catalogue
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/home/{{ BOOTSTRAP_ADMIN_USERNAME }}/.kube/config"
    src: files/ibm-operator-catalog.yaml
    wait: true
    wait_sleep: 50
