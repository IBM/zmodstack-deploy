###############################################################################
# Â© Copyright IBM Corporation 2020, 2021
###############################################################################

- hosts: zos_host
  collections:
    - ibm.ibm_zos_core
  gather_facts: false
  environment: "{{ environment_vars }}"
  vars:
    keyring: 'ZCONNECT'
    owner_id: 'ZOSCSRV'
    o: 'IBM'
    country: 'US'
    cert_type: 'USER' # Value should be either USER or CERTAUTH
    cn_user: 'ZOSCSRV_ZCONN_Server'
    ou_user: 'ZOSVSI'
    cert_label_user: 'ZCONN_Server'
    cn_ca: 'ADCD_SELFCA_CUSTCERT'
    ou_ca: 'ADCD'
    cert_label_ca: 'ADCD_COMMON' # Value should be ' ' for a self-signed USER cert
    expiry_date: '2025-12-31'

  tasks:
    - include_role:
        name: issue_racf_cmd
      vars:
        task_description: 'Create a new keyring'
        command:
          - RACDCERT ADDRING({{keyring}}) ID({{owner_id}})
          - RACDCERT LISTRING({{keyring}}) ID({{owner_id}})

    - include_role:
        name: issue_racf_cmd
      vars:
        task_description: 'Create new self-signed USER cert and connect to keyring'
        command:
          - >
            RACDCERT GENCERT ID({{owner_id}}) SUBJECTSDN(CN('{{cn_user}}') +
              O('{{o}}') OU('{{ou_user}}') C('{{country}}')) WITHLABEL('{{cert_label_user}}') +
              NOTAFTER(DATE({{expiry_date}}))
          - >
            RACDCERT ID({{owner_id}}) CONNECT(LABEL('{{cert_label_user}}') +
              RING({{keyring}}) DEFAULT)
          - >
            RACDCERT LISTRING({{keyring}}) ID({{owner_id}})
          - >
            RACDCERT LISTCHAIN (LABEL('{{cert_label_user}}')) ID({{owner_id}})
      when: cert_type == 'USER' and cert_label_ca == ' '

    - include_role:
        name: issue_racf_cmd
      vars:
        task_description: 'Create new local-CA-signed USER cert and connect to keyring'
        command:
          - >
            RACDCERT GENCERT ID({{owner_id}}) SUBJECTSDN(CN('{{cn_user}}') +
              O('{{o}}') OU('{{ou_user}}') C('{{country}}')) WITHLABEL('{{cert_label_user}}') +
              SIGNWITH(CERTAUTH LABEL('{{cert_label_ca}}')) +
              NOTAFTER(DATE({{expiry_date}}))
          - >
            RACDCERT ID({{owner_id}}) CONNECT(LABEL('{{cert_label_user}}') +
              RING({{keyring}}) DEFAULT)
          - >
            RACDCERT LISTRING({{keyring}}) ID({{owner_id}})
          - >
            RACDCERT LISTCHAIN (LABEL('{{cert_label_user}}')) ID({{owner_id}})
      when: cert_type == 'USER' and not cert_label_ca == ' '

    - include_role:
        name: issue_racf_cmd
      vars:
        task_description: 'Create new CA cert and connect to keyring'
        command:
          - >
            RACDCERT GENCERT CERTAUTH KEYUSAGE(CERTSIGN) +
               SUBJECTSDN(CN('{{cn_ca}}') O('{{o}}') OU('{{ou_ca}}') +
               C('{{country}}')) WITHLABEL('{{cert_label_ca}}') +
               NOTAFTER(DATE({{expiry_date}}))
          - >
            RACDCERT ID({{owner_id}}) +
               CONNECT(CERTAUTH LABEL('{{cert_label_ca}}') +
               RING({{keyring}}))
      when: cert_type == 'CERTAUTH'

    - include_role:
        name: issue_operator_cmd
      vars:
        task_description: 'Refresh keyring'
        command: "F {{owner_id}},REFRESH,KEYSTORE"
